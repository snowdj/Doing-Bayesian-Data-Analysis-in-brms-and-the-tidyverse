# ungroup() %>%
# spread(key = name, value = threshold)  %>%
mutate(z = rnorm(n(), mean = 0, sd = 1)) %>%
mutate(Y = case_when(
z < `Intercept[1]` ~ 1,
z < `Intercept[2]` ~ 2,
z < `Intercept[3]` ~ 3,
z < `Intercept[4]` ~ 4,
z < `Intercept[5]` ~ 5,
z < `Intercept[6]` ~ 6,
z >= `Intercept[6]` ~ 7
)) %>%
mutate(Y = factor(Y)) %>%
ggplot(aes(x = Y)) +
geom_bar() +
theme(panel.grid = element_blank())
# summarise(mean = mean(Y),
#           sd   = sd(Y))
post %>%
select(-iter)
post %>%
select(-iter) %>%
mutate_all(funs = ~pnorm(. ,0, 1))
post %>%
select(-iter) %>%
mutate_all(.funs = ~pnorm(. ,0, 1))
post %>%
select(-iter) %>%
mutate_all(.funs = ~pnorm(. ,0, 1)) %>%
mutate(`p[Y==1]` = `Intercept[1]`,
`p[Y==2]` = `Intercept[2]` - `Intercept[1]`,
`p[Y==3]` = `Intercept[3]` - `Intercept[2]`,
`p[Y==4]` = `Intercept[4]` - `Intercept[3]`,
`p[Y==5]` = `Intercept[5]` - `Intercept[4]`,
`p[Y==6]` = `Intercept[6]` - `Intercept[5]`,
`p[Y==7]` = 1 - `Intercept[6]`)
library(tidybayes)
post %>%
select(-iter) %>%
mutate_all(.funs = ~pnorm(. ,0, 1)) %>%
mutate(`p[Y==1]` = `Intercept[1]`,
`p[Y==2]` = `Intercept[2]` - `Intercept[1]`,
`p[Y==3]` = `Intercept[3]` - `Intercept[2]`,
`p[Y==4]` = `Intercept[4]` - `Intercept[3]`,
`p[Y==5]` = `Intercept[5]` - `Intercept[4]`,
`p[Y==6]` = `Intercept[6]` - `Intercept[5]`,
`p[Y==7]` = 1 - `Intercept[6]`) %>%
pivot_longer(starts_with("p[")) %>%
ggplot(aes(x = value)) +
geom_histogram(color = "grey92", fill = "grey67",
size = .05, bins = 50) +
geom_halfeyeh(aes(y = 0),
.width = .95, size = 1/2) +
scale_x_continuous(breaks = c(0, .1, .2)) +
scale_y_continuous(NULL, breaks = NULL) +
coord_cartesian(xlim = c(0, .25)) +
theme(panel.grid = element_blank()) +
facet_wrap(~key, scales = "free_y", labeller = label_parsed)
library(tidybayes)
post %>%
select(-iter) %>%
mutate_all(.funs = ~pnorm(. ,0, 1)) %>%
mutate(`p[Y==1]` = `Intercept[1]`,
`p[Y==2]` = `Intercept[2]` - `Intercept[1]`,
`p[Y==3]` = `Intercept[3]` - `Intercept[2]`,
`p[Y==4]` = `Intercept[4]` - `Intercept[3]`,
`p[Y==5]` = `Intercept[5]` - `Intercept[4]`,
`p[Y==6]` = `Intercept[6]` - `Intercept[5]`,
`p[Y==7]` = 1 - `Intercept[6]`) %>%
pivot_longer(starts_with("p[")) %>%
ggplot(aes(x = value)) +
geom_histogram(color = "grey92", fill = "grey67",
size = .05, bins = 50) +
geom_halfeyeh(aes(y = 0),
.width = .95, size = 1/2) +
scale_x_continuous(breaks = c(0, .1, .2)) +
scale_y_continuous(NULL, breaks = NULL) +
coord_cartesian(xlim = c(0, .25)) +
theme(panel.grid = element_blank()) +
facet_wrap(~name, scales = "free_y", labeller = label_parsed)
library(tidybayes)
post %>%
select(-iter) %>%
mutate_all(.funs = ~pnorm(. ,0, 1)) %>%
mutate(`p[Y==1]` = `Intercept[1]`,
`p[Y==2]` = `Intercept[2]` - `Intercept[1]`,
`p[Y==3]` = `Intercept[3]` - `Intercept[2]`,
`p[Y==4]` = `Intercept[4]` - `Intercept[3]`,
`p[Y==5]` = `Intercept[5]` - `Intercept[4]`,
`p[Y==6]` = `Intercept[6]` - `Intercept[5]`,
`p[Y==7]` = 1 - `Intercept[6]`) %>%
pivot_longer(starts_with("p[")) %>%
ggplot(aes(x = value)) +
geom_histogram(color = "grey92", fill = "grey67",
size = .05, bins = 50) +
geom_halfeyeh(aes(y = 0),
.width = .95, size = 1/2) +
scale_x_continuous(breaks = c(0, .1, .2)) +
scale_y_continuous(NULL, breaks = NULL) +
# coord_cartesian(xlim = c(0, .25)) +
theme(panel.grid = element_blank()) +
facet_wrap(~name, scales = "free_y", labeller = label_parsed)
library(tidybayes)
post %>%
select(-iter) %>%
mutate_all(.funs = ~pnorm(. ,0, 1)) %>%
mutate(`p[Y==1]` = `Intercept[1]`,
`p[Y==2]` = `Intercept[2]` - `Intercept[1]`,
`p[Y==3]` = `Intercept[3]` - `Intercept[2]`,
`p[Y==4]` = `Intercept[4]` - `Intercept[3]`,
`p[Y==5]` = `Intercept[5]` - `Intercept[4]`,
`p[Y==6]` = `Intercept[6]` - `Intercept[5]`,
`p[Y==7]` = 1 - `Intercept[6]`) %>%
pivot_longer(starts_with("p[")) %>%
ggplot(aes(x = value)) +
geom_histogram(color = "grey92", fill = "grey67",
size = .05, bins = 50) +
geom_halfeyeh(aes(y = 0),
.width = .95, size = 1/2) +
# scale_x_continuous(breaks = c(0, .1, .2)) +
scale_y_continuous(NULL, breaks = NULL) +
# coord_cartesian(xlim = c(0, .25)) +
theme(panel.grid = element_blank()) +
facet_wrap(~name, scales = "free_y", labeller = label_parsed)
library(tidybayes)
post %>%
select(-iter) %>%
mutate_all(.funs = ~pnorm(. ,0, 1)) %>%
mutate(`p[Y==1]` = `Intercept[1]`,
`p[Y==2]` = `Intercept[2]` - `Intercept[1]`,
`p[Y==3]` = `Intercept[3]` - `Intercept[2]`,
`p[Y==4]` = `Intercept[4]` - `Intercept[3]`,
`p[Y==5]` = `Intercept[5]` - `Intercept[4]`,
`p[Y==6]` = `Intercept[6]` - `Intercept[5]`,
`p[Y==7]` = 1 - `Intercept[6]`) %>%
pivot_longer(starts_with("p[")) %>%
ggplot(aes(x = value, y = name)) +
geom_histogram(color = "grey92", fill = "grey67",
size = .05, bins = 50) +
geom_halfeyeh(aes(y = 0),
.width = .95, size = 1/2) +
scale_y_continuous(NULL, breaks = NULL) +
coord_cartesian(xlim = 0:1) +
theme(panel.grid = element_blank()) #+
library(tidybayes)
post %>%
select(-iter) %>%
mutate_all(.funs = ~pnorm(. ,0, 1)) %>%
mutate(`p[Y==1]` = `Intercept[1]`,
`p[Y==2]` = `Intercept[2]` - `Intercept[1]`,
`p[Y==3]` = `Intercept[3]` - `Intercept[2]`,
`p[Y==4]` = `Intercept[4]` - `Intercept[3]`,
`p[Y==5]` = `Intercept[5]` - `Intercept[4]`,
`p[Y==6]` = `Intercept[6]` - `Intercept[5]`,
`p[Y==7]` = 1 - `Intercept[6]`) %>%
pivot_longer(starts_with("p[")) %>%
ggplot(aes(x = value, y = name)) +
geom_histogram(color = "grey92", fill = "grey67",
size = .05, bins = 50) +
geom_halfeyeh(aes(y = 0),
.width = .95, size = 1/2) +
# scale_y_continuous(NULL, breaks = NULL) +
coord_cartesian(xlim = 0:1) +
theme(panel.grid = element_blank()) #+
library(tidybayes)
post %>%
select(-iter) %>%
mutate_all(.funs = ~pnorm(. ,0, 1)) %>%
mutate(`p[Y==1]` = `Intercept[1]`,
`p[Y==2]` = `Intercept[2]` - `Intercept[1]`,
`p[Y==3]` = `Intercept[3]` - `Intercept[2]`,
`p[Y==4]` = `Intercept[4]` - `Intercept[3]`,
`p[Y==5]` = `Intercept[5]` - `Intercept[4]`,
`p[Y==6]` = `Intercept[6]` - `Intercept[5]`,
`p[Y==7]` = 1 - `Intercept[6]`) %>%
pivot_longer(starts_with("p[")) %>%
ggplot(aes(x = value)) +
geom_histogram(color = "grey92", fill = "grey67",
size = .05, bins = 50) +
geom_halfeyeh(aes(y = name),
.width = .95, size = 1/2) +
# scale_y_continuous(NULL, breaks = NULL) +
coord_cartesian(xlim = 0:1) +
theme(panel.grid = element_blank()) #+
# facet_wrap(~name, scales = "free_y", labeller = label_parsed)
library(tidybayes)
post %>%
select(-iter) %>%
mutate_all(.funs = ~pnorm(. ,0, 1)) %>%
mutate(`p[Y==1]` = `Intercept[1]`,
`p[Y==2]` = `Intercept[2]` - `Intercept[1]`,
`p[Y==3]` = `Intercept[3]` - `Intercept[2]`,
`p[Y==4]` = `Intercept[4]` - `Intercept[3]`,
`p[Y==5]` = `Intercept[5]` - `Intercept[4]`,
`p[Y==6]` = `Intercept[6]` - `Intercept[5]`,
`p[Y==7]` = 1 - `Intercept[6]`) %>%
pivot_longer(starts_with("p[")) %>%
ggplot(aes(x = value, y = name)) +
geom_histogram(color = "grey92", fill = "grey67",
size = .05, bins = 50) +
geom_halfeyeh(aes(y = name),
.width = .95, size = 1/2) +
# scale_y_continuous(NULL, breaks = NULL) +
coord_cartesian(xlim = 0:1) +
theme(panel.grid = element_blank()) #+
post %>%
select(-iter) %>%
mutate_all(.funs = ~pnorm(. ,0, 1)) %>%
mutate(`p[Y==1]` = `Intercept[1]`,
`p[Y==2]` = `Intercept[2]` - `Intercept[1]`,
`p[Y==3]` = `Intercept[3]` - `Intercept[2]`,
`p[Y==4]` = `Intercept[4]` - `Intercept[3]`,
`p[Y==5]` = `Intercept[5]` - `Intercept[4]`,
`p[Y==6]` = `Intercept[6]` - `Intercept[5]`,
`p[Y==7]` = 1 - `Intercept[6]`) %>%
pivot_longer(starts_with("p[")) %>%
ggplot(aes(x = value, y = name)) +
geom_halfeyeh(aes(y = name),
.width = .95, size = 1/2) +
# scale_y_continuous(NULL, breaks = NULL) +
coord_cartesian(xlim = 0:1) +
theme(panel.grid = element_blank()) #+
post %>%
select(-iter) %>%
mutate_all(.funs = ~pnorm(. ,0, 1)) %>%
transmute(`p[Y==1]` = `Intercept[1]`,
`p[Y==2]` = `Intercept[2]` - `Intercept[1]`,
`p[Y==3]` = `Intercept[3]` - `Intercept[2]`,
`p[Y==4]` = `Intercept[4]` - `Intercept[3]`,
`p[Y==5]` = `Intercept[5]` - `Intercept[4]`,
`p[Y==6]` = `Intercept[6]` - `Intercept[5]`,
`p[Y==7]` = 1 - `Intercept[6]`) %>%
set_names(1:7) %>%
pivot_longer(everything()) %>%
# pivot_longer(starts_with("p[")) %>%
ggplot(aes(x = value, y = name)) +
geom_halfeyeh(aes(y = name),
.width = .95, size = 1/2) +
# scale_y_continuous(NULL, breaks = NULL) +
ylab(expression(paste(italic(p), "[", italic(i), "]"))) +
coord_cartesian(xlim = 0:1) +
theme(panel.grid = element_blank()) #+
library(tidybayes)
post %>%
select(-iter) %>%
mutate_all(.funs = ~pnorm(. ,0, 1)) %>%
transmute(`p[Y==1]` = `Intercept[1]`,
`p[Y==2]` = `Intercept[2]` - `Intercept[1]`,
`p[Y==3]` = `Intercept[3]` - `Intercept[2]`,
`p[Y==4]` = `Intercept[4]` - `Intercept[3]`,
`p[Y==5]` = `Intercept[5]` - `Intercept[4]`,
`p[Y==6]` = `Intercept[6]` - `Intercept[5]`,
`p[Y==7]` = 1 - `Intercept[6]`) %>%
set_names(1:7) %>%
pivot_longer(everything()) %>%
# pivot_longer(starts_with("p[")) %>%
ggplot(aes(x = value, y = name)) +
geom_halfeyeh(aes(y = name),
.width = .95, size = 1/2) +
# scale_y_continuous(NULL, breaks = NULL) +
ylab(expression(paste(italic(p), "[y = ", italic(i), "]"))) +
coord_cartesian(xlim = 0:1) +
theme(panel.grid = element_blank()) #+
# facet_wrap(~name, scales = "free_y", labeller = label_parsed)
library(tidybayes)
post %>%
select(-iter) %>%
mutate_all(.funs = ~pnorm(. ,0, 1)) %>%
transmute(`p[Y==1]` = `Intercept[1]`,
`p[Y==2]` = `Intercept[2]` - `Intercept[1]`,
`p[Y==3]` = `Intercept[3]` - `Intercept[2]`,
`p[Y==4]` = `Intercept[4]` - `Intercept[3]`,
`p[Y==5]` = `Intercept[5]` - `Intercept[4]`,
`p[Y==6]` = `Intercept[6]` - `Intercept[5]`,
`p[Y==7]` = 1 - `Intercept[6]`) %>%
set_names(1:7) %>%
pivot_longer(everything()) %>%
# pivot_longer(starts_with("p[")) %>%
ggplot(aes(x = value, y = name)) +
geom_halfeyeh(aes(y = name),
.width = .95, size = 1/2) +
# scale_y_continuous(NULL, breaks = NULL) +
ylab(expression(paste(italic(p), "[", italic(Y==i), "]"))) +
coord_cartesian(xlim = 0:1) +
theme(panel.grid = element_blank()) #+
# facet_wrap(~name, scales = "free_y", labeller = label_parsed)
library(tidybayes)
post %>%
select(-iter) %>%
mutate_all(.funs = ~pnorm(. ,0, 1)) %>%
transmute(`p[Y==1]` = `Intercept[1]`,
`p[Y==2]` = `Intercept[2]` - `Intercept[1]`,
`p[Y==3]` = `Intercept[3]` - `Intercept[2]`,
`p[Y==4]` = `Intercept[4]` - `Intercept[3]`,
`p[Y==5]` = `Intercept[5]` - `Intercept[4]`,
`p[Y==6]` = `Intercept[6]` - `Intercept[5]`,
`p[Y==7]` = 1 - `Intercept[6]`) %>%
set_names(1:7) %>%
pivot_longer(everything()) %>%
# pivot_longer(starts_with("p[")) %>%
ggplot(aes(x = value, y = name)) +
geom_halfeyeh(aes(y = name),
.width = .95, size = 1/2) +
# scale_y_continuous(NULL, breaks = NULL) +
ylab(expression(paste(italic(p), "[", italic(Y==i), "]"))) +
coord_cartesian(xlim = 0:1) +
theme(panel.grid = element_blank()) #+
# facet_wrap(~name, scales = "free_y", labeller = label_parsed)
library(tidybayes)
post %>%
select(-iter) %>%
mutate_all(.funs = ~pnorm(. ,0, 1)) %>%
transmute(`p[Y==1]` = `Intercept[1]`,
`p[Y==2]` = `Intercept[2]` - `Intercept[1]`,
`p[Y==3]` = `Intercept[3]` - `Intercept[2]`,
`p[Y==4]` = `Intercept[4]` - `Intercept[3]`,
`p[Y==5]` = `Intercept[5]` - `Intercept[4]`,
`p[Y==6]` = `Intercept[6]` - `Intercept[5]`,
`p[Y==7]` = 1 - `Intercept[6]`) %>%
set_names(1:7) %>%
pivot_longer(everything()) %>%
# pivot_longer(starts_with("p[")) %>%
ggplot(aes(x = value, y = name)) +
geom_halfeyeh(aes(y = name),
.width = .95, size = 1/2) +
# scale_y_continuous(NULL, breaks = NULL) +
labs(x = expression(paste(italic(p), "[", italic(Y==i), "]")),
y = "Y") +
coord_cartesian(xlim = 0:1) +
theme(panel.grid = element_blank()) #+
# facet_wrap(~name, scales = "free_y", labeller = label_parsed)
library(tidybayes)
post %>%
select(-iter) %>%
mutate_all(.funs = ~pnorm(. ,0, 1)) %>%
transmute(`p[Y==1]` = `Intercept[1]`,
`p[Y==2]` = `Intercept[2]` - `Intercept[1]`,
`p[Y==3]` = `Intercept[3]` - `Intercept[2]`,
`p[Y==4]` = `Intercept[4]` - `Intercept[3]`,
`p[Y==5]` = `Intercept[5]` - `Intercept[4]`,
`p[Y==6]` = `Intercept[6]` - `Intercept[5]`,
`p[Y==7]` = 1 - `Intercept[6]`) %>%
set_names(1:7) %>%
pivot_longer(everything()) %>%
# pivot_longer(starts_with("p[")) %>%
ggplot(aes(x = value, y = name)) +
geom_halfeyeh(aes(y = name),
.width = .95, size = 1/2) +
# scale_y_continuous(NULL, breaks = NULL) +
labs(x = expression(paste(italic(p), "[", italic(Y==i), "]")),
y = italic(Y)) +
coord_cartesian(xlim = 0:1) +
theme(panel.grid = element_blank()) #+
library(tidybayes)
post %>%
select(-iter) %>%
mutate_all(.funs = ~pnorm(. ,0, 1)) %>%
transmute(`p[Y==1]` = `Intercept[1]`,
`p[Y==2]` = `Intercept[2]` - `Intercept[1]`,
`p[Y==3]` = `Intercept[3]` - `Intercept[2]`,
`p[Y==4]` = `Intercept[4]` - `Intercept[3]`,
`p[Y==5]` = `Intercept[5]` - `Intercept[4]`,
`p[Y==6]` = `Intercept[6]` - `Intercept[5]`,
`p[Y==7]` = 1 - `Intercept[6]`) %>%
set_names(1:7) %>%
pivot_longer(everything()) %>%
# pivot_longer(starts_with("p[")) %>%
ggplot(aes(x = value, y = name)) +
geom_halfeyeh(aes(y = name),
.width = .95, size = 1/2) +
# scale_y_continuous(NULL, breaks = NULL) +
labs(x = expression(paste(italic(p), "[Y = ", italic(i), "]")),
y = Y) +
coord_cartesian(xlim = 0:1) +
theme(panel.grid = element_blank()) #+
library(tidybayes)
post %>%
select(-iter) %>%
mutate_all(.funs = ~pnorm(. ,0, 1)) %>%
transmute(`p[Y==1]` = `Intercept[1]`,
`p[Y==2]` = `Intercept[2]` - `Intercept[1]`,
`p[Y==3]` = `Intercept[3]` - `Intercept[2]`,
`p[Y==4]` = `Intercept[4]` - `Intercept[3]`,
`p[Y==5]` = `Intercept[5]` - `Intercept[4]`,
`p[Y==6]` = `Intercept[6]` - `Intercept[5]`,
`p[Y==7]` = 1 - `Intercept[6]`) %>%
set_names(1:7) %>%
pivot_longer(everything(), names_to = "Y") %>%
# pivot_longer(starts_with("p[")) %>%
ggplot(aes(x = value, y = Y)) +
geom_halfeyeh(aes(y = name),
.width = .95, size = 1/2) +
# scale_y_continuous(NULL, breaks = NULL) +
xlab(expression(paste(italic(p), "[Y = ", italic(i), "]"))) +
coord_cartesian(xlim = 0:1) +
theme(panel.grid = element_blank()) #+
library(tidybayes)
post %>%
select(-iter) %>%
mutate_all(.funs = ~pnorm(. ,0, 1)) %>%
transmute(`p[Y==1]` = `Intercept[1]`,
`p[Y==2]` = `Intercept[2]` - `Intercept[1]`,
`p[Y==3]` = `Intercept[3]` - `Intercept[2]`,
`p[Y==4]` = `Intercept[4]` - `Intercept[3]`,
`p[Y==5]` = `Intercept[5]` - `Intercept[4]`,
`p[Y==6]` = `Intercept[6]` - `Intercept[5]`,
`p[Y==7]` = 1 - `Intercept[6]`) %>%
set_names(1:7) %>%
pivot_longer(everything(), names_to = "Y") %>%
# pivot_longer(starts_with("p[")) %>%
ggplot(aes(x = value, y = Y)) +
geom_halfeyeh(.width = .95, size = 1/2) +
# scale_y_continuous(NULL, breaks = NULL) +
xlab(expression(paste(italic(p), "[Y = ", italic(i), "]"))) +
coord_cartesian(xlim = 0:1) +
theme(panel.grid = element_blank()) #+
# facet_wrap(~name, scales = "free_y", labeller = label_parsed)
bb_check(fit2, type = "bar", nsamples = 100)
pp_check(fit2, type = "bar", nsamples = 100)
pp_check(fit2, type = "bars", nsamples = 100)
pp_check(fit2, type = "bars", nsamples = 100) +
theme(legend.position = c(.9, .9))
pp_check(fit2, type = "bars", nsamples = 100) +
theme(legend.position = c(.9, .8))
pp_check(fit2, type = "bars", nsamples = 100) +
theme(legend.position = c(.9, .85))
set.seed(23)
pp_check(fit2, type = "bars", nsamples = 100) +
theme(legend.position = c(.9, .85))
set.seed(23)
pp_check(fit2, type = "bars", nsamples = 100) +
labs(title = "Data w. Post. Pred",
x = "y",
y = NULL) +
theme(legend.position = c(.9, .85))
set.seed(23)
pp_check(fit2, type = "bars", nsamples = 100) +
scale_x_continuous("y", breaks = 1:7) +
scale_y_continuous(NULL, breaks = NULL) +
labs(title = "Data w. Post. Pred") +
theme(legend.position = c(.9, .85))
set.seed(23)
pp_check(fit2, type = "bars", nsamples = 100) +
scale_x_continuous("y", breaks = 1:7) +
scale_y_continuous(NULL, breaks = NULL) +
ggtitle("Data w. Post. Pred") +
theme(legend.position = c(.9, .8))
set.seed(23)
pp_check(fit2, type = "bars", nsamples = 100) +
scale_x_continuous("y", breaks = 1:7) +
scale_y_continuous(NULL, breaks = NULL) +
ggtitle("Data w. Post. Pred",
subtitle = "N = 100") +
theme(legend.position = c(.9, .8))
set.seed(23)
pp_check(fit2, type = "bars", nsamples = 100) +
scale_x_continuous("y", breaks = 1:7) +
scale_y_continuous(NULL, breaks = NULL) +
ggtitle("Data with posterior predictions",
subtitle = "N = 100") +
theme(legend.position = c(.9, .8))
set.seed(23)
pp_check(fit2, type = "bars", nsamples = 100) +
scale_x_continuous("y", breaks = 1:7) +
scale_y_continuous(NULL, breaks = NULL) +
ggtitle("Data with posterior predictions",
subtitle = "N = 100") +
theme(legend.position = c(.9, .8))
set.seed(23)
pp_check(fit2, type = "bars", nsamples = 100) +
scale_x_continuous("y", breaks = 1:7) +
scale_y_continuous(NULL, breaks = NULL) +
ggtitle("Data with posterior predictions",
subtitle = "N = 100") +
theme(legend.position = c(.9, .8))
install.packages("pacman", dependencies = T)
options(width = 100)
options(width = 100)
library(tidyverse)
library(santoku)
library(brms)
my_data %>%
mutate(Y = factor(Y)) %>%
ggplot(aes(x = Y)) +
geom_bar() +
theme(panel.grid = element_blank())
print(fit2)
fit2 <-
brm(data = my_data,
family = cumulative("probit"),
Y ~ 1,
prior(normal(0, 4), class = Intercept),
iter = 3000, warmup = 1000, chains = 4, cores = 4,
seed = 23)
install.packages(brms, dependencies = T)
install.packages("brms"), dependencies = T)
install.packages("brms", dependencies = T)
install.packages("brms", dependencies = T)
install.packages("brms", dependencies = T)
install.packages("brms", dependencies = T)
library(brms)
fit2 <-
brm(data = my_data,
family = cumulative("probit"),
Y ~ 1,
prior(normal(0, 4), class = Intercept),
iter = 3000, warmup = 1000, chains = 4, cores = 4,
seed = 23)
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
install.packages("bookdown", dependencies = T)
